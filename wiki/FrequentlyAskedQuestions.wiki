#summary Frequently Asked Questions
#labels Featured

<wiki:toc max_depth="2" />

= Frequently Asked Questions =

== Why do I need to change my {{{@Id}}} field from {{{String}}} to {{{ObjectId}}} ==
If you wanted an *automatically generated id* (the default {{{_id}}} value for mongodb) in versions prior to 0.95 you could do this:
{{{
@Id String id;
}}}

Or make queries using a string version of your {{{ObjectId}}} value because we automatically tried to convert any string into an {{{ObjectId}}} for you.

After version 0.95 this is no longer the case. You now should change that definition above from {{{String}}} to {{{ObjectId}}} like this:
{{{
@Id ObjectId id;
}}}

There are many reasons to do this. Always trying to convert from string->objectid was confusing (in documentation), and ambiguous in certain cases and made it impossible to use a string value between 18-24 characters long with alpha-numeric values (a hex string). It also was confusing because you had to remember that in other languages and the shell you had to use an {{{ObjectId}}}.

To simplify things and make it more transparent we have remove this implicit conversion.

If you don't want to use an {{{ObjectId}}} type you can manage your {{{@Id}}} value yourself. There is a sample class that uses an auto-incrementing {{{long}}} (stored as a counter on the server) as an example. Natural keys are great things to use as your id values (immutable values like a username, or email are an example in some applications).

== Do you have to close connections? ==

Not really. The Mongo driver keeps a connection pool per Mongo instance. If you wish to release those resources, just make sure you stop using the Mongo instance.


== Should I use a capped collection for referenced/linked entities? ==

You can but a reference is made up of the collection name + the {{{_id}}} field value. In capped collections the {{{_id}}} field is not unique and references might be ambiguous.
 
== Huh, why is there a className field in my Document?  Can I remove it? ==

Yes, you can; look [EntityAnnotation#Class_name_in_document_and_how_to_suppress_it here]

Please be careful that you follow the ClassPerCollection pattern if you remove the className from your persisted entites.

==Question about life cycle methods==
Absolutely:
  * See the [LifecycleMethods Lifecycle Annotations]