#summary Using Lists, Sets, and Maps.

= Using Collections =

Morphia supports collections and arrays.

These are supported for basic types, embedded, references, and serialized:

{{{
import com.google.code.morphia.annotations.Embedded;
import com.google.code.morphia.annotations.Reference;
import com.google.code.morphia.annotations.Serialized;
import com.google.code.morphia.annotations.Property;
...
@Property
private Set<String> tags;

@Embedded
private Map<String,Translation> translations;

@Reference
private List<Article> relatedArticles;
...
}}}

Morphia will use the following implementations by default when creating collections:

* {{{java.util.ArrayList}}} for List (and things that are the types below)
* {{{java.util.HashSet}}} for Set
* {{{java.util.HashMap}}} for Map

If you want to use another implementation, you can override this on the annotations:

{{{
import com.google.code.morphia.annotations.Embedded;
import com.google.code.morphia.annotations.Reference;
import com.google.code.morphia.annotations.Property;
...
@Property(concreteClass = java.util.TreeSet.class)
private Set<String> tags;

@Embedded(concreteClass = java.util.TreeMap.class)
private Map<String,Translation> translations;

@Reference(concreteClass = java.util.Vector.class)
private List<Article> relatedArticles;
...
}}}